pipeline {
    agent none
    stages {
        stage('Loop Tests') {
            matrix {
                agent {
                    label "e2e"
                }
                axes {
                    axis {
                        name 'SUBSET'
                        values '0', '1', '2', '3', '4'
                    }
                }
                stages {
                    stage('who am i') {
                        steps {
                            sh "hostname"
                        }
                    }
                    stage('clean workspace') {
                        steps {
                            cleanWs()
                        }
                    }
                    stage('sync docker image') {
                        steps {
                            sh "docker pull ghcr.io/chia7712/clip/kafka:jdk21"
                        }
                    }
                    stage('run tests') {
                        steps {
                            script {
                                warnError('test fails') {
                                    for (int i = 1; i <= 20; i++) {
                                        sh "mkdir output-${BUILD_NUMBER}"
                                        sh "docker run --cpus=3 --rm -v ${env.WORKSPACE}/output-${BUILD_NUMBER}:/tmp/output ghcr.io/chia7712/clip/kafka:jdk${JDK_VERSION} /bin/bash -c \"cp -r /home/jenkins/kafka /tmp/output && cd /tmp/output/kafka && git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 https://github.com/$ACCOUNT/kafka +$REVISION:tmp && git switch tmp && $COMMAND\""
                                        sh "rm -rf output-${BUILD_NUMBER}"
                                    }
                                }
                            }
                        }
                    }
                    stage('archive results') {
                        steps {
                            script {
                                if (fileExists("output-${BUILD_NUMBER}")) {
                                    archiveArtifacts artifacts: "output-${BUILD_NUMBER}/kafka/**/build/reports/tests/test/**"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}