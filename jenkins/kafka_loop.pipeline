pipeline {
    agent none
    stages {
        stage('Loop Tests') {
            matrix {
                agent {
                    label "e2e"
                }
                axes {
                    axis {
                        name 'SUBSET'
                        values '0', '1', '2', '3', '4'
                    }
                }
                stages {
                    stage('who am i') {
                        steps {
                            sh "hostname"
                        }
                    }
                    stage('clean workspace') {
                        steps {
                            cleanWs()
                        }
                    }
                    stage('sync docker image') {
                        steps {
                            sh "docker pull ghcr.io/chia7712/clip/kafka:jdk${JDK_VERSION}"
                        }
                    }
                    stage('sync code') {
                        steps {
                            dir("kafka-${BUILD_NUMBER}-${SUBSET}") {
                                sh "git init"
                                sh "git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 https://github.com/$ACCOUNT/kafka +$REVISION:tmp"
                                sh "git switch tmp"
                            }
                        }
                    }
                    stage('run tests') {
                        steps {
                            script {
                                warnError('test fails') {
                                    for (int i = 1; i <= 20; i++) {
                                        sh "docker run --cpus=3 --rm -v ${env.WORKSPACE}/kafka-${BUILD_NUMBER}-${SUBSET}:/tmp/kafka ghcr.io/chia7712/clip/kafka:jdk${JDK_VERSION} /bin/bash -c \"cd /tmp/kafka && $COMMAND\""
                                    }
                                }
                            }
                        }
                    }
                    stage('archive results') {
                        steps {
                            script {
                                if (fileExists("kafka-${BUILD_NUMBER}-${SUBSET}")) {
                                    archiveArtifacts artifacts: "kafka-${BUILD_NUMBER}-${SUBSET}/**/build/reports/tests/test/**"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}